:root {
  /* Adjust this value to control the speed of the marquee.
         Lower value = faster movement (more pixels per second)
         Higher value = slower movement (fewer pixels per second) */
  --marquee-speed-px-per-second: 300;
  /* Example: 60 pixels per second */
}

body {
  margin: 0;
  font-family: sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #f0f0f0;
}

.marquee-wrapper {
  width: 100%;
  /* Or a fixed width */
  max-width: 1200px;
  /* Example max width */
  overflow: hidden;
  /* Hides content outside the wrapper */
  background-color: red;
  padding: 10px 0;
  box-sizing: border-box;
  display: flex;
  /* Use flexbox to lay out the two marquee-content divs */
  position: relative;
  /* Needed for JavaScript calculation */
}

.marquee-content {
  display: flex;
  /* Use flex to lay out images horizontally */
  flex-shrink: 0;
  /* Prevents the content from shrinking within the wrapper */
  animation-name: marquee-animation;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  /* Duration will be set by JavaScript */
}

.marquee-content img {
  height: 100px;
  width: auto;
  margin-right: 50px;
  /* Spacing between logos */
  flex-shrink: 0;
  /* Prevents individual images from shrinking */
  object-fit: contain;
}

/* Optional: Pause on hover */
.marquee-wrapper:hover .marquee-content {
  animation-play-state: paused;
}

/* The animation keyframes */
@keyframes marquee-animation {
  0% {
    transform: translateX(0);
  }

  100% {
    /* We translate by the exact width of one of the .marquee-content divs.
           Since we have two identical divs side-by-side, this creates the seamless loop.
           When the first one goes off-screen, the second one is fully in view,
           and the animation resets instantly to the beginning, but visually, it's continuous. */
    transform: translateX(calc(-100% - var(--gap-between-content, 0px)));
    /* We'll calculate the actual width of a single .marquee-content via JS,
           and use it in the keyframes or set the animation-duration based on it.
           The -100% here refers to the width of *one* .marquee-content element.
           --gap-between-content is for potential future spacing between the two main content blocks.
           For now, let's simplify the keyframe and manage the loop via JS more directly. */
  }
}